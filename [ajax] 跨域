★跨域
一.处理跨域方式--代理
  ①一个域名地址的组成：
  http://www.abc.com:8080/js
→(协议)→(子域名)→(主域名)→(端口号)→（请求资源地址）
  ②当协议，子域名，主域名，端口号，任意个不相同时，都算做不同域。
  ③不同域之间的相互请求资源，就算做“跨域”。
  例如：http:www.abc.com/index.html 请求 http://efg.com/servoce.php的资源
1.1跨域
  javascript出于安全方面的考虑，不允许跨域调用其他页面的对象。什么是跨域呢，简单的理解就是
  因为javascript同源策略的限制，a.com域名下的js无法操作b.com或是c.a.com域名下的对象。
  主域名：abc.com  (以下子域名不同都算作跨域)
  子域名：1.www.abc.com
          2.bbs.abc.com
          3.beijing.bbs.abc.com
          4.haidian.beijing.bbs.abc.coma
1.2处理跨域方法一----代理（后台的操作方法）
  ①通过在同域名的web服务器端创建一个代理；
  ②北京的服务器（域名：http://www.beijing.com）
   上海的服务器（域名：http://www.shanghai.com）
  ③比如在北京的web服务器的后台(wwww.beijing.com/proxy-shanghaiservice.php)来调用上海服务器
  （www.shanghai.com/service.php）的服务，然后再把相应结果返回给前端，这样前端调用北京同域名的服务
  就和调用上海的服务效果相同了。
  
二.处理跨域方式--JSONP
  jsonp可用于解决主流浏览器的跨域数据访问的问题。（get方法下）
  在www.aaaa.com页面中：
  <script>
    function jsonp(json) {
        alert(json["name"]);
    }
  </script>
  <script src="http://www.bbb.com/jsonp.js"></script>
  在www.bbb.com页面中：
  jsonp（{‘name’:'hong7','ahe':24}）;
  ajax：（栗子）
  $.ajax({ 
		    type: "GET", 	
			  url: "http://127.0.0.1:8000/ajaxdemo/serverjsonp.php?number=" + $("#keyword").val(),
			★dataType: "jsonp",
			★jsonp: "callback",
			success: function(data) {
				if (data.success) {
					$("#searchResult").html(data.msg);
				} else {
					$("#searchResult").html("出现错误：" + data.msg);
				}  
			},
			error: function(jqXHR){     
			   alert("发生错误：" + jqXHR.status);  
			},     
		});
  
三.处理跨域方式--XHR2
3.1 HTML提供的xmlhttprequest level2已经实现了跨域访问以及其他的一些新功能；
3.2 ie10以下的版本都不支持；
3.3 在服务器端做一些小改造即可：(在服务器端加上如下两句话)
  header（'Access-Control-Allow-Origin:*'）;
  header（'Access-Control-Allow-Methods:POST,GET'）;
